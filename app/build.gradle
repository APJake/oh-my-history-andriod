plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id "androidx.navigation.safeargs"
    id "com.google.dagger.hilt.android"
//    id 'com.google.gms.google-services'
//    id 'com.google.firebase.crashlytics'
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    namespace 'com.apjake.ohmyhistory'
    compileSdk ConfigData.compileSdkVersion

    defaultConfig {
        applicationId "com.apjake.ohmyhistory"
        minSdk ConfigData.minSdkVersion
        targetSdk ConfigData.targetSdkVersion
        versionCode ConfigData.versionCode
        versionName ConfigData.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion JetpackCompose.VERSION
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    def composeBom = platform(JetpackCompose.composeBomPlatform)
    implementation composeBom
    androidTestImplementation composeBom

//    implementation(project(":common"))
//    implementation(project(":domain"))
//    implementation(project(":data"))

    implementation CommonUi.core
    implementation CommonUi.appCompat
    implementation CommonUi.material
    implementation CommonUi.fragment
    implementation CommonUi.constraintLayout
    implementation CommonUi.legacySupport
    testImplementation Testings.junit
    androidTestImplementation Testings.extJunit
    androidTestImplementation Testings.espressoCore

    // compose
    implementation JetpackCompose.ui
    implementation JetpackCompose.uiUtil
    implementation JetpackCompose.material
    implementation JetpackCompose.uiPreview
    implementation JetpackCompose.activity
    implementation JetpackCompose.constraintLayout
    implementation Hilt.navigationCompose
    implementation Navigation.compose

    // accompanist
    implementation JetpackCompose.flowLayout

    androidTestImplementation JetpackCompose.uiTest
    debugImplementation JetpackCompose.uiTooling
    debugImplementation JetpackCompose.uiTestManifest

    // Firebase
    implementation platform(Firebase.bom)
    implementation Firebase.crashlytics
    implementation Firebase.analytics
    implementation Firebase.cloudMessaging

    // Room components
    implementation Room.runtime
    kapt Room.compiler
    implementation Room.ktx
    androidTestImplementation Room.testing

    // Navigation Component
    // implementation Navigation.fragment
    implementation Navigation.ui

    // Lifecycle
    implementation Lifecycle.lifecycleRuntime
    implementation Lifecycle.extension
    annotationProcessor Lifecycle.compiler
    implementation Lifecycle.common
    implementation Lifecycle.viewModel

    // Kotlin components
    implementation Others.kotlinStdLib

    // Coroutine
    implementation Coroutine.core
    implementation Coroutine.android

    //DataBinding
    kapt Others.dataBinding

    // di
    implementation Hilt.core
    kapt Hilt.compiler
    implementation Hilt.android
    implementation Hilt.fragment

    // DataStore
    implementation DataStore.preferences

    // logging
    implementation Others.timber

    // compose
    // pull to refresh
    implementation JetpackCompose.materialIcons

    // ui
    implementation CommonUi.splashScreen
    implementation JetpackCompose.dateTimePicker

}